// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: heka.proto

package com.mozilla.telemetry.heka;

public final class Heka {

  private Heka() {
  }

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mozilla.telemetry.heka.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * length in bytes
     * </pre>
     *
     * <code>required uint32 message_length = 1;</code>
     */
    boolean hasMessageLength();

    /**
     * <pre>
     * length in bytes
     * </pre>
     *
     * <code>required uint32 message_length = 1;</code>
     */
    int getMessageLength();

    /**
     * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
     */
    boolean hasHmacHashFunction();

    /**
     * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
     */
    com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction getHmacHashFunction();

    /**
     * <code>optional string hmac_signer = 4;</code>
     */
    boolean hasHmacSigner();

    /**
     * <code>optional string hmac_signer = 4;</code>
     */
    java.lang.String getHmacSigner();

    /**
     * <code>optional string hmac_signer = 4;</code>
     */
    com.google.protobuf.ByteString getHmacSignerBytes();

    /**
     * <code>optional uint32 hmac_key_version = 5;</code>
     */
    boolean hasHmacKeyVersion();

    /**
     * <code>optional uint32 hmac_key_version = 5;</code>
     */
    int getHmacKeyVersion();

    /**
     * <code>optional bytes hmac = 6;</code>
     */
    boolean hasHmac();

    /**
     * <code>optional bytes hmac = 6;</code>
     */
    com.google.protobuf.ByteString getHmac();
  }

  /**
   * Protobuf type {@code com.mozilla.telemetry.heka.Header}
   */
  public static final class Header extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mozilla.telemetry.heka.Header)
      HeaderOrBuilder {

    private static final long serialVersionUID = 0L;

    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Header() {
      hmacHashFunction_ = 0;
      hmacSigner_ = "";
      hmac_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({ "unused" })
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Header(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
          .newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              messageLength_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
              com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction value = com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction
                  .valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                hmacHashFunction_ = rawValue;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              hmacSigner_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              hmacKeyVersion_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              hmac_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(com.mozilla.telemetry.heka.Heka.Header.class,
              com.mozilla.telemetry.heka.Heka.Header.Builder.class);
    }

    /**
     * Protobuf enum {@code com.mozilla.telemetry.heka.Header.HmacHashFunction}
     */
    public enum HmacHashFunction implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MD5 = 0;</code>
       */
      MD5(0),
      /**
       * <code>SHA1 = 1;</code>
       */
      SHA1(1),;

      /**
       * <code>MD5 = 0;</code>
       */
      public static final int MD5_VALUE = 0;
      /**
       * <code>SHA1 = 1;</code>
       */
      public static final int SHA1_VALUE = 1;

      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static HmacHashFunction valueOf(int value) {
        return forNumber(value);
      }

      public static HmacHashFunction forNumber(int value) {
        switch (value) {
          case 0:
            return MD5;
          case 1:
            return SHA1;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<HmacHashFunction> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<HmacHashFunction> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<HmacHashFunction>() {

        public HmacHashFunction findValueByNumber(int number) {
          return HmacHashFunction.forNumber(number);
        }
      };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return com.mozilla.telemetry.heka.Heka.Header.getDescriptor().getEnumTypes().get(0);
      }

      private static final HmacHashFunction[] VALUES = values();

      public static HmacHashFunction valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private HmacHashFunction(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.mozilla.telemetry.heka.Header.HmacHashFunction)
    }

    private int bitField0_;
    public static final int MESSAGE_LENGTH_FIELD_NUMBER = 1;
    private int messageLength_;

    /**
     * <pre>
     * length in bytes
     * </pre>
     *
     * <code>required uint32 message_length = 1;</code>
     */
    public boolean hasMessageLength() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     * <pre>
     * length in bytes
     * </pre>
     *
     * <code>required uint32 message_length = 1;</code>
     */
    public int getMessageLength() {
      return messageLength_;
    }

    public static final int HMAC_HASH_FUNCTION_FIELD_NUMBER = 3;
    private int hmacHashFunction_;

    /**
     * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
     */
    public boolean hasHmacHashFunction() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
     */
    public com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction getHmacHashFunction() {
      @SuppressWarnings("deprecation")
      com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction result = com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction
          .valueOf(hmacHashFunction_);
      return result == null ? com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction.MD5 : result;
    }

    public static final int HMAC_SIGNER_FIELD_NUMBER = 4;
    private volatile java.lang.Object hmacSigner_;

    /**
     * <code>optional string hmac_signer = 4;</code>
     */
    public boolean hasHmacSigner() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     * <code>optional string hmac_signer = 4;</code>
     */
    public java.lang.String getHmacSigner() {
      java.lang.Object ref = hmacSigner_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hmacSigner_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string hmac_signer = 4;</code>
     */
    public com.google.protobuf.ByteString getHmacSignerBytes() {
      java.lang.Object ref = hmacSigner_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        hmacSigner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HMAC_KEY_VERSION_FIELD_NUMBER = 5;
    private int hmacKeyVersion_;

    /**
     * <code>optional uint32 hmac_key_version = 5;</code>
     */
    public boolean hasHmacKeyVersion() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     * <code>optional uint32 hmac_key_version = 5;</code>
     */
    public int getHmacKeyVersion() {
      return hmacKeyVersion_;
    }

    public static final int HMAC_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString hmac_;

    /**
     * <code>optional bytes hmac = 6;</code>
     */
    public boolean hasHmac() {
      return ((bitField0_ & 0x00000010) != 0);
    }

    /**
     * <code>optional bytes hmac = 6;</code>
     */
    public com.google.protobuf.ByteString getHmac() {
      return hmac_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      if (!hasMessageLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, messageLength_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(3, hmacHashFunction_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, hmacSigner_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(5, hmacKeyVersion_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBytes(6, hmac_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(1, messageLength_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, hmacHashFunction_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, hmacSigner_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(5, hmacKeyVersion_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(6, hmac_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mozilla.telemetry.heka.Heka.Header)) {
        return super.equals(obj);
      }
      com.mozilla.telemetry.heka.Heka.Header other = (com.mozilla.telemetry.heka.Heka.Header) obj;

      if (hasMessageLength() != other.hasMessageLength())
        return false;
      if (hasMessageLength()) {
        if (getMessageLength() != other.getMessageLength())
          return false;
      }
      if (hasHmacHashFunction() != other.hasHmacHashFunction())
        return false;
      if (hasHmacHashFunction()) {
        if (hmacHashFunction_ != other.hmacHashFunction_)
          return false;
      }
      if (hasHmacSigner() != other.hasHmacSigner())
        return false;
      if (hasHmacSigner()) {
        if (!getHmacSigner().equals(other.getHmacSigner()))
          return false;
      }
      if (hasHmacKeyVersion() != other.hasHmacKeyVersion())
        return false;
      if (hasHmacKeyVersion()) {
        if (getHmacKeyVersion() != other.getHmacKeyVersion())
          return false;
      }
      if (hasHmac() != other.hasHmac())
        return false;
      if (hasHmac()) {
        if (!getHmac().equals(other.getHmac()))
          return false;
      }
      if (!unknownFields.equals(other.unknownFields))
        return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMessageLength()) {
        hash = (37 * hash) + MESSAGE_LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getMessageLength();
      }
      if (hasHmacHashFunction()) {
        hash = (37 * hash) + HMAC_HASH_FUNCTION_FIELD_NUMBER;
        hash = (53 * hash) + hmacHashFunction_;
      }
      if (hasHmacSigner()) {
        hash = (37 * hash) + HMAC_SIGNER_FIELD_NUMBER;
        hash = (53 * hash) + getHmacSigner().hashCode();
      }
      if (hasHmacKeyVersion()) {
        hash = (37 * hash) + HMAC_KEY_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getHmacKeyVersion();
      }
      if (hasHmac()) {
        hash = (37 * hash) + HMAC_FIELD_NUMBER;
        hash = (53 * hash) + getHmac().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.mozilla.telemetry.heka.Heka.Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code com.mozilla.telemetry.heka.Header}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mozilla.telemetry.heka.Header)
        com.mozilla.telemetry.heka.Heka.HeaderOrBuilder {

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(com.mozilla.telemetry.heka.Heka.Header.class,
                com.mozilla.telemetry.heka.Heka.Header.Builder.class);
      }

      // Construct using com.mozilla.telemetry.heka.Heka.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        messageLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        hmacHashFunction_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        hmacSigner_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        hmacKeyVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        hmac_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Header_descriptor;
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Header getDefaultInstanceForType() {
        return com.mozilla.telemetry.heka.Heka.Header.getDefaultInstance();
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Header build() {
        com.mozilla.telemetry.heka.Heka.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Header buildPartial() {
        com.mozilla.telemetry.heka.Heka.Header result = new com.mozilla.telemetry.heka.Heka.Header(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.messageLength_ = messageLength_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hmacHashFunction_ = hmacHashFunction_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hmacSigner_ = hmacSigner_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.hmacKeyVersion_ = hmacKeyVersion_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hmac_ = hmac_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mozilla.telemetry.heka.Heka.Header) {
          return mergeFrom((com.mozilla.telemetry.heka.Heka.Header) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mozilla.telemetry.heka.Heka.Header other) {
        if (other == com.mozilla.telemetry.heka.Heka.Header.getDefaultInstance())
          return this;
        if (other.hasMessageLength()) {
          setMessageLength(other.getMessageLength());
        }
        if (other.hasHmacHashFunction()) {
          setHmacHashFunction(other.getHmacHashFunction());
        }
        if (other.hasHmacSigner()) {
          bitField0_ |= 0x00000004;
          hmacSigner_ = other.hmacSigner_;
          onChanged();
        }
        if (other.hasHmacKeyVersion()) {
          setHmacKeyVersion(other.getHmacKeyVersion());
        }
        if (other.hasHmac()) {
          setHmac(other.getHmac());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasMessageLength()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.mozilla.telemetry.heka.Heka.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mozilla.telemetry.heka.Heka.Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private int messageLength_;

      /**
       * <pre>
       * length in bytes
       * </pre>
       *
       * <code>required uint32 message_length = 1;</code>
       */
      public boolean hasMessageLength() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       * <pre>
       * length in bytes
       * </pre>
       *
       * <code>required uint32 message_length = 1;</code>
       */
      public int getMessageLength() {
        return messageLength_;
      }

      /**
       * <pre>
       * length in bytes
       * </pre>
       *
       * <code>required uint32 message_length = 1;</code>
       */
      public Builder setMessageLength(int value) {
        bitField0_ |= 0x00000001;
        messageLength_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * length in bytes
       * </pre>
       *
       * <code>required uint32 message_length = 1;</code>
       */
      public Builder clearMessageLength() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageLength_ = 0;
        onChanged();
        return this;
      }

      private int hmacHashFunction_ = 0;

      /**
       * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
       */
      public boolean hasHmacHashFunction() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
       */
      public com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction getHmacHashFunction() {
        @SuppressWarnings("deprecation")
        com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction result = com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction
            .valueOf(hmacHashFunction_);
        return result == null ? com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction.MD5
            : result;
      }

      /**
       * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
       */
      public Builder setHmacHashFunction(
          com.mozilla.telemetry.heka.Heka.Header.HmacHashFunction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        hmacHashFunction_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>optional .com.mozilla.telemetry.heka.Header.HmacHashFunction hmac_hash_function = 3 [default = MD5];</code>
       */
      public Builder clearHmacHashFunction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hmacHashFunction_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object hmacSigner_ = "";

      /**
       * <code>optional string hmac_signer = 4;</code>
       */
      public boolean hasHmacSigner() {
        return ((bitField0_ & 0x00000004) != 0);
      }

      /**
       * <code>optional string hmac_signer = 4;</code>
       */
      public java.lang.String getHmacSigner() {
        java.lang.Object ref = hmacSigner_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hmacSigner_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string hmac_signer = 4;</code>
       */
      public com.google.protobuf.ByteString getHmacSignerBytes() {
        java.lang.Object ref = hmacSigner_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          hmacSigner_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string hmac_signer = 4;</code>
       */
      public Builder setHmacSigner(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        hmacSigner_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string hmac_signer = 4;</code>
       */
      public Builder clearHmacSigner() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hmacSigner_ = getDefaultInstance().getHmacSigner();
        onChanged();
        return this;
      }

      /**
       * <code>optional string hmac_signer = 4;</code>
       */
      public Builder setHmacSignerBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        hmacSigner_ = value;
        onChanged();
        return this;
      }

      private int hmacKeyVersion_;

      /**
       * <code>optional uint32 hmac_key_version = 5;</code>
       */
      public boolean hasHmacKeyVersion() {
        return ((bitField0_ & 0x00000008) != 0);
      }

      /**
       * <code>optional uint32 hmac_key_version = 5;</code>
       */
      public int getHmacKeyVersion() {
        return hmacKeyVersion_;
      }

      /**
       * <code>optional uint32 hmac_key_version = 5;</code>
       */
      public Builder setHmacKeyVersion(int value) {
        bitField0_ |= 0x00000008;
        hmacKeyVersion_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional uint32 hmac_key_version = 5;</code>
       */
      public Builder clearHmacKeyVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hmacKeyVersion_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hmac_ = com.google.protobuf.ByteString.EMPTY;

      /**
       * <code>optional bytes hmac = 6;</code>
       */
      public boolean hasHmac() {
        return ((bitField0_ & 0x00000010) != 0);
      }

      /**
       * <code>optional bytes hmac = 6;</code>
       */
      public com.google.protobuf.ByteString getHmac() {
        return hmac_;
      }

      /**
       * <code>optional bytes hmac = 6;</code>
       */
      public Builder setHmac(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        hmac_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional bytes hmac = 6;</code>
       */
      public Builder clearHmac() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hmac_ = getDefaultInstance().getHmac();
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:com.mozilla.telemetry.heka.Header)
    }

    // @@protoc_insertion_point(class_scope:com.mozilla.telemetry.heka.Header)
    private static final com.mozilla.telemetry.heka.Heka.Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mozilla.telemetry.heka.Heka.Header();
    }

    public static com.mozilla.telemetry.heka.Heka.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated
    public static final com.google.protobuf.Parser<Header> PARSER = new com.google.protobuf.AbstractParser<Header>() {

      @java.lang.Override
      public Header parsePartialFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mozilla.telemetry.heka.Heka.Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mozilla.telemetry.heka.Field)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();

    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();

    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString getNameBytes();

    /**
     * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
     */
    boolean hasValueType();

    /**
     * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
     */
    com.mozilla.telemetry.heka.Heka.Field.ValueType getValueType();

    /**
     * <code>optional string representation = 3;</code>
     */
    boolean hasRepresentation();

    /**
     * <code>optional string representation = 3;</code>
     */
    java.lang.String getRepresentation();

    /**
     * <code>optional string representation = 3;</code>
     */
    com.google.protobuf.ByteString getRepresentationBytes();

    /**
     * <code>repeated string value_string = 4;</code>
     */
    java.util.List<java.lang.String> getValueStringList();

    /**
     * <code>repeated string value_string = 4;</code>
     */
    int getValueStringCount();

    /**
     * <code>repeated string value_string = 4;</code>
     */
    java.lang.String getValueString(int index);

    /**
     * <code>repeated string value_string = 4;</code>
     */
    com.google.protobuf.ByteString getValueStringBytes(int index);

    /**
     * <code>repeated bytes value_bytes = 5;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getValueBytesList();

    /**
     * <code>repeated bytes value_bytes = 5;</code>
     */
    int getValueBytesCount();

    /**
     * <code>repeated bytes value_bytes = 5;</code>
     */
    com.google.protobuf.ByteString getValueBytes(int index);

    /**
     * <code>repeated int64 value_integer = 6 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getValueIntegerList();

    /**
     * <code>repeated int64 value_integer = 6 [packed = true];</code>
     */
    int getValueIntegerCount();

    /**
     * <code>repeated int64 value_integer = 6 [packed = true];</code>
     */
    long getValueInteger(int index);

    /**
     * <code>repeated double value_double = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getValueDoubleList();

    /**
     * <code>repeated double value_double = 7 [packed = true];</code>
     */
    int getValueDoubleCount();

    /**
     * <code>repeated double value_double = 7 [packed = true];</code>
     */
    double getValueDouble(int index);

    /**
     * <code>repeated bool value_bool = 8 [packed = true];</code>
     */
    java.util.List<java.lang.Boolean> getValueBoolList();

    /**
     * <code>repeated bool value_bool = 8 [packed = true];</code>
     */
    int getValueBoolCount();

    /**
     * <code>repeated bool value_bool = 8 [packed = true];</code>
     */
    boolean getValueBool(int index);
  }

  /**
   * Protobuf type {@code com.mozilla.telemetry.heka.Field}
   */
  public static final class Field extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mozilla.telemetry.heka.Field)
      FieldOrBuilder {

    private static final long serialVersionUID = 0L;

    // Use Field.newBuilder() to construct.
    private Field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Field() {
      name_ = "";
      valueType_ = 0;
      representation_ = "";
      valueString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      valueBytes_ = java.util.Collections.emptyList();
      valueInteger_ = emptyLongList();
      valueDouble_ = emptyDoubleList();
      valueBool_ = emptyBooleanList();
    }

    @java.lang.Override
    @SuppressWarnings({ "unused" })
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Field();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Field(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
          .newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
              com.mozilla.telemetry.heka.Heka.Field.ValueType value = com.mozilla.telemetry.heka.Heka.Field.ValueType
                  .valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                valueType_ = rawValue;
              }
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              representation_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                valueString_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              valueString_.add(bs);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                valueBytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000010;
              }
              valueBytes_.add(input.readBytes());
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                valueInteger_ = newLongList();
                mutable_bitField0_ |= 0x00000020;
              }
              valueInteger_.addLong(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                valueInteger_ = newLongList();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                valueInteger_.addLong(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 57: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                valueDouble_ = newDoubleList();
                mutable_bitField0_ |= 0x00000040;
              }
              valueDouble_.addDouble(input.readDouble());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                valueDouble_ = newDoubleList();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                valueDouble_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                valueBool_ = newBooleanList();
                mutable_bitField0_ |= 0x00000080;
              }
              valueBool_.addBoolean(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                valueBool_ = newBooleanList();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                valueBool_.addBoolean(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          valueString_ = valueString_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          valueBytes_ = java.util.Collections.unmodifiableList(valueBytes_); // C
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          valueInteger_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          valueDouble_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          valueBool_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Field_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(com.mozilla.telemetry.heka.Heka.Field.class,
              com.mozilla.telemetry.heka.Heka.Field.Builder.class);
    }

    /**
     * Protobuf enum {@code com.mozilla.telemetry.heka.Field.ValueType}
     */
    public enum ValueType implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>STRING = 0;</code>
       */
      STRING(0),
      /**
       * <code>BYTES = 1;</code>
       */
      BYTES(1),
      /**
       * <code>INTEGER = 2;</code>
       */
      INTEGER(2),
      /**
       * <code>DOUBLE = 3;</code>
       */
      DOUBLE(3),
      /**
       * <code>BOOL = 4;</code>
       */
      BOOL(4),;

      /**
       * <code>STRING = 0;</code>
       */
      public static final int STRING_VALUE = 0;
      /**
       * <code>BYTES = 1;</code>
       */
      public static final int BYTES_VALUE = 1;
      /**
       * <code>INTEGER = 2;</code>
       */
      public static final int INTEGER_VALUE = 2;
      /**
       * <code>DOUBLE = 3;</code>
       */
      public static final int DOUBLE_VALUE = 3;
      /**
       * <code>BOOL = 4;</code>
       */
      public static final int BOOL_VALUE = 4;

      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueType valueOf(int value) {
        return forNumber(value);
      }

      public static ValueType forNumber(int value) {
        switch (value) {
          case 0:
            return STRING;
          case 1:
            return BYTES;
          case 2:
            return INTEGER;
          case 3:
            return DOUBLE;
          case 4:
            return BOOL;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ValueType> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<ValueType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<ValueType>() {

        public ValueType findValueByNumber(int number) {
          return ValueType.forNumber(number);
        }
      };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return com.mozilla.telemetry.heka.Heka.Field.getDescriptor().getEnumTypes().get(0);
      }

      private static final ValueType[] VALUES = values();

      public static ValueType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ValueType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.mozilla.telemetry.heka.Field.ValueType)
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;

    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }

    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_TYPE_FIELD_NUMBER = 2;
    private int valueType_;

    /**
     * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
     */
    public com.mozilla.telemetry.heka.Heka.Field.ValueType getValueType() {
      @SuppressWarnings("deprecation")
      com.mozilla.telemetry.heka.Heka.Field.ValueType result = com.mozilla.telemetry.heka.Heka.Field.ValueType
          .valueOf(valueType_);
      return result == null ? com.mozilla.telemetry.heka.Heka.Field.ValueType.STRING : result;
    }

    public static final int REPRESENTATION_FIELD_NUMBER = 3;
    private volatile java.lang.Object representation_;

    /**
     * <code>optional string representation = 3;</code>
     */
    public boolean hasRepresentation() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     * <code>optional string representation = 3;</code>
     */
    public java.lang.String getRepresentation() {
      java.lang.Object ref = representation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          representation_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string representation = 3;</code>
     */
    public com.google.protobuf.ByteString getRepresentationBytes() {
      java.lang.Object ref = representation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        representation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_STRING_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList valueString_;

    /**
     * <code>repeated string value_string = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList getValueStringList() {
      return valueString_;
    }

    /**
     * <code>repeated string value_string = 4;</code>
     */
    public int getValueStringCount() {
      return valueString_.size();
    }

    /**
     * <code>repeated string value_string = 4;</code>
     */
    public java.lang.String getValueString(int index) {
      return valueString_.get(index);
    }

    /**
     * <code>repeated string value_string = 4;</code>
     */
    public com.google.protobuf.ByteString getValueStringBytes(int index) {
      return valueString_.getByteString(index);
    }

    public static final int VALUE_BYTES_FIELD_NUMBER = 5;
    private java.util.List<com.google.protobuf.ByteString> valueBytes_;

    /**
     * <code>repeated bytes value_bytes = 5;</code>
     */
    public java.util.List<com.google.protobuf.ByteString> getValueBytesList() {
      return valueBytes_;
    }

    /**
     * <code>repeated bytes value_bytes = 5;</code>
     */
    public int getValueBytesCount() {
      return valueBytes_.size();
    }

    /**
     * <code>repeated bytes value_bytes = 5;</code>
     */
    public com.google.protobuf.ByteString getValueBytes(int index) {
      return valueBytes_.get(index);
    }

    public static final int VALUE_INTEGER_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.LongList valueInteger_;

    /**
     * <code>repeated int64 value_integer = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Long> getValueIntegerList() {
      return valueInteger_;
    }

    /**
     * <code>repeated int64 value_integer = 6 [packed = true];</code>
     */
    public int getValueIntegerCount() {
      return valueInteger_.size();
    }

    /**
     * <code>repeated int64 value_integer = 6 [packed = true];</code>
     */
    public long getValueInteger(int index) {
      return valueInteger_.getLong(index);
    }

    private int valueIntegerMemoizedSerializedSize = -1;

    public static final int VALUE_DOUBLE_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.DoubleList valueDouble_;

    /**
     * <code>repeated double value_double = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Double> getValueDoubleList() {
      return valueDouble_;
    }

    /**
     * <code>repeated double value_double = 7 [packed = true];</code>
     */
    public int getValueDoubleCount() {
      return valueDouble_.size();
    }

    /**
     * <code>repeated double value_double = 7 [packed = true];</code>
     */
    public double getValueDouble(int index) {
      return valueDouble_.getDouble(index);
    }

    private int valueDoubleMemoizedSerializedSize = -1;

    public static final int VALUE_BOOL_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.BooleanList valueBool_;

    /**
     * <code>repeated bool value_bool = 8 [packed = true];</code>
     */
    public java.util.List<java.lang.Boolean> getValueBoolList() {
      return valueBool_;
    }

    /**
     * <code>repeated bool value_bool = 8 [packed = true];</code>
     */
    public int getValueBoolCount() {
      return valueBool_.size();
    }

    /**
     * <code>repeated bool value_bool = 8 [packed = true];</code>
     */
    public boolean getValueBool(int index) {
      return valueBool_.getBoolean(index);
    }

    private int valueBoolMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, valueType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, representation_);
      }
      for (int i = 0; i < valueString_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, valueString_.getRaw(i));
      }
      for (int i = 0; i < valueBytes_.size(); i++) {
        output.writeBytes(5, valueBytes_.get(i));
      }
      if (getValueIntegerList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(valueIntegerMemoizedSerializedSize);
      }
      for (int i = 0; i < valueInteger_.size(); i++) {
        output.writeInt64NoTag(valueInteger_.getLong(i));
      }
      if (getValueDoubleList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(valueDoubleMemoizedSerializedSize);
      }
      for (int i = 0; i < valueDouble_.size(); i++) {
        output.writeDoubleNoTag(valueDouble_.getDouble(i));
      }
      if (getValueBoolList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(valueBoolMemoizedSerializedSize);
      }
      for (int i = 0; i < valueBool_.size(); i++) {
        output.writeBoolNoTag(valueBool_.getBoolean(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, valueType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, representation_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueString_.size(); i++) {
          dataSize += computeStringSizeNoTag(valueString_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getValueStringList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueBytes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(valueBytes_.get(i));
        }
        size += dataSize;
        size += 1 * getValueBytesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueInteger_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(valueInteger_.getLong(i));
        }
        size += dataSize;
        if (!getValueIntegerList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
        }
        valueIntegerMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getValueDoubleList().size();
        size += dataSize;
        if (!getValueDoubleList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
        }
        valueDoubleMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getValueBoolList().size();
        size += dataSize;
        if (!getValueBoolList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
        }
        valueBoolMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mozilla.telemetry.heka.Heka.Field)) {
        return super.equals(obj);
      }
      com.mozilla.telemetry.heka.Heka.Field other = (com.mozilla.telemetry.heka.Heka.Field) obj;

      if (hasName() != other.hasName())
        return false;
      if (hasName()) {
        if (!getName().equals(other.getName()))
          return false;
      }
      if (hasValueType() != other.hasValueType())
        return false;
      if (hasValueType()) {
        if (valueType_ != other.valueType_)
          return false;
      }
      if (hasRepresentation() != other.hasRepresentation())
        return false;
      if (hasRepresentation()) {
        if (!getRepresentation().equals(other.getRepresentation()))
          return false;
      }
      if (!getValueStringList().equals(other.getValueStringList()))
        return false;
      if (!getValueBytesList().equals(other.getValueBytesList()))
        return false;
      if (!getValueIntegerList().equals(other.getValueIntegerList()))
        return false;
      if (!getValueDoubleList().equals(other.getValueDoubleList()))
        return false;
      if (!getValueBoolList().equals(other.getValueBoolList()))
        return false;
      if (!unknownFields.equals(other.unknownFields))
        return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasValueType()) {
        hash = (37 * hash) + VALUE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + valueType_;
      }
      if (hasRepresentation()) {
        hash = (37 * hash) + REPRESENTATION_FIELD_NUMBER;
        hash = (53 * hash) + getRepresentation().hashCode();
      }
      if (getValueStringCount() > 0) {
        hash = (37 * hash) + VALUE_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getValueStringList().hashCode();
      }
      if (getValueBytesCount() > 0) {
        hash = (37 * hash) + VALUE_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getValueBytesList().hashCode();
      }
      if (getValueIntegerCount() > 0) {
        hash = (37 * hash) + VALUE_INTEGER_FIELD_NUMBER;
        hash = (53 * hash) + getValueIntegerList().hashCode();
      }
      if (getValueDoubleCount() > 0) {
        hash = (37 * hash) + VALUE_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + getValueDoubleList().hashCode();
      }
      if (getValueBoolCount() > 0) {
        hash = (37 * hash) + VALUE_BOOL_FIELD_NUMBER;
        hash = (53 * hash) + getValueBoolList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.mozilla.telemetry.heka.Heka.Field prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code com.mozilla.telemetry.heka.Field}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mozilla.telemetry.heka.Field)
        com.mozilla.telemetry.heka.Heka.FieldOrBuilder {

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(com.mozilla.telemetry.heka.Heka.Field.class,
                com.mozilla.telemetry.heka.Heka.Field.Builder.class);
      }

      // Construct using com.mozilla.telemetry.heka.Heka.Field.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        representation_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        valueString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        valueBytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        valueInteger_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        valueDouble_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000040);
        valueBool_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Field_descriptor;
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Field getDefaultInstanceForType() {
        return com.mozilla.telemetry.heka.Heka.Field.getDefaultInstance();
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Field build() {
        com.mozilla.telemetry.heka.Heka.Field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Field buildPartial() {
        com.mozilla.telemetry.heka.Heka.Field result = new com.mozilla.telemetry.heka.Heka.Field(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.representation_ = representation_;
        if (((bitField0_ & 0x00000008) != 0)) {
          valueString_ = valueString_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.valueString_ = valueString_;
        if (((bitField0_ & 0x00000010) != 0)) {
          valueBytes_ = java.util.Collections.unmodifiableList(valueBytes_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.valueBytes_ = valueBytes_;
        if (((bitField0_ & 0x00000020) != 0)) {
          valueInteger_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.valueInteger_ = valueInteger_;
        if (((bitField0_ & 0x00000040) != 0)) {
          valueDouble_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.valueDouble_ = valueDouble_;
        if (((bitField0_ & 0x00000080) != 0)) {
          valueBool_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.valueBool_ = valueBool_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mozilla.telemetry.heka.Heka.Field) {
          return mergeFrom((com.mozilla.telemetry.heka.Heka.Field) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mozilla.telemetry.heka.Heka.Field other) {
        if (other == com.mozilla.telemetry.heka.Heka.Field.getDefaultInstance())
          return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasRepresentation()) {
          bitField0_ |= 0x00000004;
          representation_ = other.representation_;
          onChanged();
        }
        if (!other.valueString_.isEmpty()) {
          if (valueString_.isEmpty()) {
            valueString_ = other.valueString_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValueStringIsMutable();
            valueString_.addAll(other.valueString_);
          }
          onChanged();
        }
        if (!other.valueBytes_.isEmpty()) {
          if (valueBytes_.isEmpty()) {
            valueBytes_ = other.valueBytes_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureValueBytesIsMutable();
            valueBytes_.addAll(other.valueBytes_);
          }
          onChanged();
        }
        if (!other.valueInteger_.isEmpty()) {
          if (valueInteger_.isEmpty()) {
            valueInteger_ = other.valueInteger_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureValueIntegerIsMutable();
            valueInteger_.addAll(other.valueInteger_);
          }
          onChanged();
        }
        if (!other.valueDouble_.isEmpty()) {
          if (valueDouble_.isEmpty()) {
            valueDouble_ = other.valueDouble_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureValueDoubleIsMutable();
            valueDouble_.addAll(other.valueDouble_);
          }
          onChanged();
        }
        if (!other.valueBool_.isEmpty()) {
          if (valueBool_.isEmpty()) {
            valueBool_ = other.valueBool_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureValueBoolIsMutable();
            valueBool_.addAll(other.valueBool_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.mozilla.telemetry.heka.Heka.Field parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mozilla.telemetry.heka.Heka.Field) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";

      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }

      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int valueType_ = 0;

      /**
       * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
       */
      public com.mozilla.telemetry.heka.Heka.Field.ValueType getValueType() {
        @SuppressWarnings("deprecation")
        com.mozilla.telemetry.heka.Heka.Field.ValueType result = com.mozilla.telemetry.heka.Heka.Field.ValueType
            .valueOf(valueType_);
        return result == null ? com.mozilla.telemetry.heka.Heka.Field.ValueType.STRING : result;
      }

      /**
       * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
       */
      public Builder setValueType(com.mozilla.telemetry.heka.Heka.Field.ValueType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        valueType_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>optional .com.mozilla.telemetry.heka.Field.ValueType value_type = 2 [default = STRING];</code>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        valueType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object representation_ = "";

      /**
       * <code>optional string representation = 3;</code>
       */
      public boolean hasRepresentation() {
        return ((bitField0_ & 0x00000004) != 0);
      }

      /**
       * <code>optional string representation = 3;</code>
       */
      public java.lang.String getRepresentation() {
        java.lang.Object ref = representation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            representation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string representation = 3;</code>
       */
      public com.google.protobuf.ByteString getRepresentationBytes() {
        java.lang.Object ref = representation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          representation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string representation = 3;</code>
       */
      public Builder setRepresentation(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        representation_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string representation = 3;</code>
       */
      public Builder clearRepresentation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        representation_ = getDefaultInstance().getRepresentation();
        onChanged();
        return this;
      }

      /**
       * <code>optional string representation = 3;</code>
       */
      public Builder setRepresentationBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        representation_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList valueString_ = com.google.protobuf.LazyStringArrayList.EMPTY;

      private void ensureValueStringIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          valueString_ = new com.google.protobuf.LazyStringArrayList(valueString_);
          bitField0_ |= 0x00000008;
        }
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList getValueStringList() {
        return valueString_.getUnmodifiableView();
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public int getValueStringCount() {
        return valueString_.size();
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public java.lang.String getValueString(int index) {
        return valueString_.get(index);
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public com.google.protobuf.ByteString getValueStringBytes(int index) {
        return valueString_.getByteString(index);
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public Builder setValueString(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueStringIsMutable();
        valueString_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public Builder addValueString(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueStringIsMutable();
        valueString_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public Builder addAllValueString(java.lang.Iterable<java.lang.String> values) {
        ensureValueStringIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, valueString_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public Builder clearValueString() {
        valueString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string value_string = 4;</code>
       */
      public Builder addValueStringBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueStringIsMutable();
        valueString_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> valueBytes_ = java.util.Collections
          .emptyList();

      private void ensureValueBytesIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          valueBytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>(valueBytes_);
          bitField0_ |= 0x00000010;
        }
      }

      /**
       * <code>repeated bytes value_bytes = 5;</code>
       */
      public java.util.List<com.google.protobuf.ByteString> getValueBytesList() {
        return ((bitField0_ & 0x00000010) != 0)
            ? java.util.Collections.unmodifiableList(valueBytes_)
            : valueBytes_;
      }

      /**
       * <code>repeated bytes value_bytes = 5;</code>
       */
      public int getValueBytesCount() {
        return valueBytes_.size();
      }

      /**
       * <code>repeated bytes value_bytes = 5;</code>
       */
      public com.google.protobuf.ByteString getValueBytes(int index) {
        return valueBytes_.get(index);
      }

      /**
       * <code>repeated bytes value_bytes = 5;</code>
       */
      public Builder setValueBytes(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueBytesIsMutable();
        valueBytes_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated bytes value_bytes = 5;</code>
       */
      public Builder addValueBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueBytesIsMutable();
        valueBytes_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated bytes value_bytes = 5;</code>
       */
      public Builder addAllValueBytes(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureValueBytesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, valueBytes_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated bytes value_bytes = 5;</code>
       */
      public Builder clearValueBytes() {
        valueBytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList valueInteger_ = emptyLongList();

      private void ensureValueIntegerIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          valueInteger_ = mutableCopy(valueInteger_);
          bitField0_ |= 0x00000020;
        }
      }

      /**
       * <code>repeated int64 value_integer = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Long> getValueIntegerList() {
        return ((bitField0_ & 0x00000020) != 0)
            ? java.util.Collections.unmodifiableList(valueInteger_)
            : valueInteger_;
      }

      /**
       * <code>repeated int64 value_integer = 6 [packed = true];</code>
       */
      public int getValueIntegerCount() {
        return valueInteger_.size();
      }

      /**
       * <code>repeated int64 value_integer = 6 [packed = true];</code>
       */
      public long getValueInteger(int index) {
        return valueInteger_.getLong(index);
      }

      /**
       * <code>repeated int64 value_integer = 6 [packed = true];</code>
       */
      public Builder setValueInteger(int index, long value) {
        ensureValueIntegerIsMutable();
        valueInteger_.setLong(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated int64 value_integer = 6 [packed = true];</code>
       */
      public Builder addValueInteger(long value) {
        ensureValueIntegerIsMutable();
        valueInteger_.addLong(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated int64 value_integer = 6 [packed = true];</code>
       */
      public Builder addAllValueInteger(java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIntegerIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, valueInteger_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated int64 value_integer = 6 [packed = true];</code>
       */
      public Builder clearValueInteger() {
        valueInteger_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList valueDouble_ = emptyDoubleList();

      private void ensureValueDoubleIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          valueDouble_ = mutableCopy(valueDouble_);
          bitField0_ |= 0x00000040;
        }
      }

      /**
       * <code>repeated double value_double = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Double> getValueDoubleList() {
        return ((bitField0_ & 0x00000040) != 0)
            ? java.util.Collections.unmodifiableList(valueDouble_)
            : valueDouble_;
      }

      /**
       * <code>repeated double value_double = 7 [packed = true];</code>
       */
      public int getValueDoubleCount() {
        return valueDouble_.size();
      }

      /**
       * <code>repeated double value_double = 7 [packed = true];</code>
       */
      public double getValueDouble(int index) {
        return valueDouble_.getDouble(index);
      }

      /**
       * <code>repeated double value_double = 7 [packed = true];</code>
       */
      public Builder setValueDouble(int index, double value) {
        ensureValueDoubleIsMutable();
        valueDouble_.setDouble(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated double value_double = 7 [packed = true];</code>
       */
      public Builder addValueDouble(double value) {
        ensureValueDoubleIsMutable();
        valueDouble_.addDouble(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated double value_double = 7 [packed = true];</code>
       */
      public Builder addAllValueDouble(java.lang.Iterable<? extends java.lang.Double> values) {
        ensureValueDoubleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, valueDouble_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated double value_double = 7 [packed = true];</code>
       */
      public Builder clearValueDouble() {
        valueDouble_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.BooleanList valueBool_ = emptyBooleanList();

      private void ensureValueBoolIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          valueBool_ = mutableCopy(valueBool_);
          bitField0_ |= 0x00000080;
        }
      }

      /**
       * <code>repeated bool value_bool = 8 [packed = true];</code>
       */
      public java.util.List<java.lang.Boolean> getValueBoolList() {
        return ((bitField0_ & 0x00000080) != 0) ? java.util.Collections.unmodifiableList(valueBool_)
            : valueBool_;
      }

      /**
       * <code>repeated bool value_bool = 8 [packed = true];</code>
       */
      public int getValueBoolCount() {
        return valueBool_.size();
      }

      /**
       * <code>repeated bool value_bool = 8 [packed = true];</code>
       */
      public boolean getValueBool(int index) {
        return valueBool_.getBoolean(index);
      }

      /**
       * <code>repeated bool value_bool = 8 [packed = true];</code>
       */
      public Builder setValueBool(int index, boolean value) {
        ensureValueBoolIsMutable();
        valueBool_.setBoolean(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated bool value_bool = 8 [packed = true];</code>
       */
      public Builder addValueBool(boolean value) {
        ensureValueBoolIsMutable();
        valueBool_.addBoolean(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated bool value_bool = 8 [packed = true];</code>
       */
      public Builder addAllValueBool(java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureValueBoolIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, valueBool_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated bool value_bool = 8 [packed = true];</code>
       */
      public Builder clearValueBool() {
        valueBool_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:com.mozilla.telemetry.heka.Field)
    }

    // @@protoc_insertion_point(class_scope:com.mozilla.telemetry.heka.Field)
    private static final com.mozilla.telemetry.heka.Heka.Field DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mozilla.telemetry.heka.Heka.Field();
    }

    public static com.mozilla.telemetry.heka.Heka.Field getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated
    public static final com.google.protobuf.Parser<Field> PARSER = new com.google.protobuf.AbstractParser<Field>() {

      @java.lang.Override
      public Field parsePartialFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Field(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Field> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Field> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mozilla.telemetry.heka.Heka.Field getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mozilla.telemetry.heka.Message)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes uuid = 1;</code>
     */
    boolean hasUuid();

    /**
     * <code>required bytes uuid = 1;</code>
     */
    com.google.protobuf.ByteString getUuid();

    /**
     * <pre>
     * nanoseconds since UNIX epoch
     * </pre>
     *
     * <code>required int64 timestamp = 2;</code>
     */
    boolean hasTimestamp();

    /**
     * <pre>
     * nanoseconds since UNIX epoch
     * </pre>
     *
     * <code>required int64 timestamp = 2;</code>
     */
    long getTimestamp();

    /**
     * <code>optional string dtype = 3;</code>
     */
    boolean hasDtype();

    /**
     * <code>optional string dtype = 3;</code>
     */
    java.lang.String getDtype();

    /**
     * <code>optional string dtype = 3;</code>
     */
    com.google.protobuf.ByteString getDtypeBytes();

    /**
     * <code>optional string logger = 4;</code>
     */
    boolean hasLogger();

    /**
     * <code>optional string logger = 4;</code>
     */
    java.lang.String getLogger();

    /**
     * <code>optional string logger = 4;</code>
     */
    com.google.protobuf.ByteString getLoggerBytes();

    /**
     * <code>optional int32 severity = 5 [default = 7];</code>
     */
    boolean hasSeverity();

    /**
     * <code>optional int32 severity = 5 [default = 7];</code>
     */
    int getSeverity();

    /**
     * <code>optional string payload = 6;</code>
     */
    boolean hasPayload();

    /**
     * <code>optional string payload = 6;</code>
     */
    java.lang.String getPayload();

    /**
     * <code>optional string payload = 6;</code>
     */
    com.google.protobuf.ByteString getPayloadBytes();

    /**
     * <code>optional string env_version = 7;</code>
     */
    boolean hasEnvVersion();

    /**
     * <code>optional string env_version = 7;</code>
     */
    java.lang.String getEnvVersion();

    /**
     * <code>optional string env_version = 7;</code>
     */
    com.google.protobuf.ByteString getEnvVersionBytes();

    /**
     * <code>optional int32 pid = 8;</code>
     */
    boolean hasPid();

    /**
     * <code>optional int32 pid = 8;</code>
     */
    int getPid();

    /**
     * <code>optional string hostname = 9;</code>
     */
    boolean hasHostname();

    /**
     * <code>optional string hostname = 9;</code>
     */
    java.lang.String getHostname();

    /**
     * <code>optional string hostname = 9;</code>
     */
    com.google.protobuf.ByteString getHostnameBytes();

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    java.util.List<com.mozilla.telemetry.heka.Heka.Field> getFieldsList();

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    com.mozilla.telemetry.heka.Heka.Field getFields(int index);

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    int getFieldsCount();

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    java.util.List<? extends com.mozilla.telemetry.heka.Heka.FieldOrBuilder> getFieldsOrBuilderList();

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    com.mozilla.telemetry.heka.Heka.FieldOrBuilder getFieldsOrBuilder(int index);
  }

  /**
   * Protobuf type {@code com.mozilla.telemetry.heka.Message}
   */
  public static final class Message extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mozilla.telemetry.heka.Message)
      MessageOrBuilder {

    private static final long serialVersionUID = 0L;

    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Message() {
      uuid_ = com.google.protobuf.ByteString.EMPTY;
      dtype_ = "";
      logger_ = "";
      severity_ = 7;
      payload_ = "";
      envVersion_ = "";
      hostname_ = "";
      fields_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({ "unused" })
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Message();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Message(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
          .newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              dtype_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              logger_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              severity_ = input.readInt32();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              payload_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              envVersion_ = bs;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              pid_ = input.readInt32();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              hostname_ = bs;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                fields_ = new java.util.ArrayList<com.mozilla.telemetry.heka.Heka.Field>();
                mutable_bitField0_ |= 0x00000200;
              }
              fields_.add(input.readMessage(com.mozilla.telemetry.heka.Heka.Field.PARSER,
                  extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Message_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(com.mozilla.telemetry.heka.Heka.Message.class,
              com.mozilla.telemetry.heka.Heka.Message.Builder.class);
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString uuid_;

    /**
     * <code>required bytes uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     * <code>required bytes uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getUuid() {
      return uuid_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;

    /**
     * <pre>
     * nanoseconds since UNIX epoch
     * </pre>
     *
     * <code>required int64 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <pre>
     * nanoseconds since UNIX epoch
     * </pre>
     *
     * <code>required int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int DTYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object dtype_;

    /**
     * <code>optional string dtype = 3;</code>
     */
    public boolean hasDtype() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     * <code>optional string dtype = 3;</code>
     */
    public java.lang.String getDtype() {
      java.lang.Object ref = dtype_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dtype_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string dtype = 3;</code>
     */
    public com.google.protobuf.ByteString getDtypeBytes() {
      java.lang.Object ref = dtype_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        dtype_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGGER_FIELD_NUMBER = 4;
    private volatile java.lang.Object logger_;

    /**
     * <code>optional string logger = 4;</code>
     */
    public boolean hasLogger() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     * <code>optional string logger = 4;</code>
     */
    public java.lang.String getLogger() {
      java.lang.Object ref = logger_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          logger_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string logger = 4;</code>
     */
    public com.google.protobuf.ByteString getLoggerBytes() {
      java.lang.Object ref = logger_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        logger_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEVERITY_FIELD_NUMBER = 5;
    private int severity_;

    /**
     * <code>optional int32 severity = 5 [default = 7];</code>
     */
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000010) != 0);
    }

    /**
     * <code>optional int32 severity = 5 [default = 7];</code>
     */
    public int getSeverity() {
      return severity_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 6;
    private volatile java.lang.Object payload_;

    /**
     * <code>optional string payload = 6;</code>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000020) != 0);
    }

    /**
     * <code>optional string payload = 6;</code>
     */
    public java.lang.String getPayload() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          payload_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string payload = 6;</code>
     */
    public com.google.protobuf.ByteString getPayloadBytes() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        payload_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENV_VERSION_FIELD_NUMBER = 7;
    private volatile java.lang.Object envVersion_;

    /**
     * <code>optional string env_version = 7;</code>
     */
    public boolean hasEnvVersion() {
      return ((bitField0_ & 0x00000040) != 0);
    }

    /**
     * <code>optional string env_version = 7;</code>
     */
    public java.lang.String getEnvVersion() {
      java.lang.Object ref = envVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          envVersion_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string env_version = 7;</code>
     */
    public com.google.protobuf.ByteString getEnvVersionBytes() {
      java.lang.Object ref = envVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        envVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PID_FIELD_NUMBER = 8;
    private int pid_;

    /**
     * <code>optional int32 pid = 8;</code>
     */
    public boolean hasPid() {
      return ((bitField0_ & 0x00000080) != 0);
    }

    /**
     * <code>optional int32 pid = 8;</code>
     */
    public int getPid() {
      return pid_;
    }

    public static final int HOSTNAME_FIELD_NUMBER = 9;
    private volatile java.lang.Object hostname_;

    /**
     * <code>optional string hostname = 9;</code>
     */
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000100) != 0);
    }

    /**
     * <code>optional string hostname = 9;</code>
     */
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostname_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string hostname = 9;</code>
     */
    public com.google.protobuf.ByteString getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString
            .copyFromUtf8((java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 10;
    private java.util.List<com.mozilla.telemetry.heka.Heka.Field> fields_;

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    public java.util.List<com.mozilla.telemetry.heka.Heka.Field> getFieldsList() {
      return fields_;
    }

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    public java.util.List<? extends com.mozilla.telemetry.heka.Heka.FieldOrBuilder> getFieldsOrBuilderList() {
      return fields_;
    }

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    public com.mozilla.telemetry.heka.Heka.Field getFields(int index) {
      return fields_.get(index);
    }

    /**
     * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
     */
    public com.mozilla.telemetry.heka.Heka.FieldOrBuilder getFieldsOrBuilder(int index) {
      return fields_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dtype_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, logger_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, severity_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, payload_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, envVersion_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, pid_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, hostname_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(10, fields_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dtype_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, logger_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(5, severity_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, payload_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, envVersion_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(8, pid_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, hostname_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, fields_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mozilla.telemetry.heka.Heka.Message)) {
        return super.equals(obj);
      }
      com.mozilla.telemetry.heka.Heka.Message other = (com.mozilla.telemetry.heka.Heka.Message) obj;

      if (hasUuid() != other.hasUuid())
        return false;
      if (hasUuid()) {
        if (!getUuid().equals(other.getUuid()))
          return false;
      }
      if (hasTimestamp() != other.hasTimestamp())
        return false;
      if (hasTimestamp()) {
        if (getTimestamp() != other.getTimestamp())
          return false;
      }
      if (hasDtype() != other.hasDtype())
        return false;
      if (hasDtype()) {
        if (!getDtype().equals(other.getDtype()))
          return false;
      }
      if (hasLogger() != other.hasLogger())
        return false;
      if (hasLogger()) {
        if (!getLogger().equals(other.getLogger()))
          return false;
      }
      if (hasSeverity() != other.hasSeverity())
        return false;
      if (hasSeverity()) {
        if (getSeverity() != other.getSeverity())
          return false;
      }
      if (hasPayload() != other.hasPayload())
        return false;
      if (hasPayload()) {
        if (!getPayload().equals(other.getPayload()))
          return false;
      }
      if (hasEnvVersion() != other.hasEnvVersion())
        return false;
      if (hasEnvVersion()) {
        if (!getEnvVersion().equals(other.getEnvVersion()))
          return false;
      }
      if (hasPid() != other.hasPid())
        return false;
      if (hasPid()) {
        if (getPid() != other.getPid())
          return false;
      }
      if (hasHostname() != other.hasHostname())
        return false;
      if (hasHostname()) {
        if (!getHostname().equals(other.getHostname()))
          return false;
      }
      if (!getFieldsList().equals(other.getFieldsList()))
        return false;
      if (!unknownFields.equals(other.unknownFields))
        return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getTimestamp());
      }
      if (hasDtype()) {
        hash = (37 * hash) + DTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getDtype().hashCode();
      }
      if (hasLogger()) {
        hash = (37 * hash) + LOGGER_FIELD_NUMBER;
        hash = (53 * hash) + getLogger().hashCode();
      }
      if (hasSeverity()) {
        hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
        hash = (53 * hash) + getSeverity();
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      if (hasEnvVersion()) {
        hash = (37 * hash) + ENV_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getEnvVersion().hashCode();
      }
      if (hasPid()) {
        hash = (37 * hash) + PID_FIELD_NUMBER;
        hash = (53 * hash) + getPid();
      }
      if (hasHostname()) {
        hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
        hash = (53 * hash) + getHostname().hashCode();
      }
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.mozilla.telemetry.heka.Heka.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.mozilla.telemetry.heka.Heka.Message prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code com.mozilla.telemetry.heka.Message}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mozilla.telemetry.heka.Message)
        com.mozilla.telemetry.heka.Heka.MessageOrBuilder {

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Message_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(com.mozilla.telemetry.heka.Heka.Message.class,
                com.mozilla.telemetry.heka.Heka.Message.Builder.class);
      }

      // Construct using com.mozilla.telemetry.heka.Heka.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        uuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        dtype_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        logger_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 7;
        bitField0_ = (bitField0_ & ~0x00000010);
        payload_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        envVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        pid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        hostname_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.mozilla.telemetry.heka.Heka.internal_static_com_mozilla_telemetry_heka_Message_descriptor;
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Message getDefaultInstanceForType() {
        return com.mozilla.telemetry.heka.Heka.Message.getDefaultInstance();
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Message build() {
        com.mozilla.telemetry.heka.Heka.Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mozilla.telemetry.heka.Heka.Message buildPartial() {
        com.mozilla.telemetry.heka.Heka.Message result = new com.mozilla.telemetry.heka.Heka.Message(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dtype_ = dtype_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.logger_ = logger_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.payload_ = payload_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.envVersion_ = envVersion_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.pid_ = pid_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          to_bitField0_ |= 0x00000100;
        }
        result.hostname_ = hostname_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mozilla.telemetry.heka.Heka.Message) {
          return mergeFrom((com.mozilla.telemetry.heka.Heka.Message) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mozilla.telemetry.heka.Heka.Message other) {
        if (other == com.mozilla.telemetry.heka.Heka.Message.getDefaultInstance())
          return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasDtype()) {
          bitField0_ |= 0x00000004;
          dtype_ = other.dtype_;
          onChanged();
        }
        if (other.hasLogger()) {
          bitField0_ |= 0x00000008;
          logger_ = other.logger_;
          onChanged();
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasPayload()) {
          bitField0_ |= 0x00000020;
          payload_ = other.payload_;
          onChanged();
        }
        if (other.hasEnvVersion()) {
          bitField0_ |= 0x00000040;
          envVersion_ = other.envVersion_;
          onChanged();
        }
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (other.hasHostname()) {
          bitField0_ |= 0x00000100;
          hostname_ = other.hostname_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000200);
              fieldsBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                  ? getFieldsFieldBuilder()
                  : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasUuid()) {
          return false;
        }
        if (!hasTimestamp()) {
          return false;
        }
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.mozilla.telemetry.heka.Heka.Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mozilla.telemetry.heka.Heka.Message) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.ByteString uuid_ = com.google.protobuf.ByteString.EMPTY;

      /**
       * <code>required bytes uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       * <code>required bytes uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getUuid() {
        return uuid_;
      }

      /**
       * <code>required bytes uuid = 1;</code>
       */
      public Builder setUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required bytes uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }

      private long timestamp_;

      /**
       * <pre>
       * nanoseconds since UNIX epoch
       * </pre>
       *
       * <code>required int64 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       * <pre>
       * nanoseconds since UNIX epoch
       * </pre>
       *
       * <code>required int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }

      /**
       * <pre>
       * nanoseconds since UNIX epoch
       * </pre>
       *
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * nanoseconds since UNIX epoch
       * </pre>
       *
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object dtype_ = "";

      /**
       * <code>optional string dtype = 3;</code>
       */
      public boolean hasDtype() {
        return ((bitField0_ & 0x00000004) != 0);
      }

      /**
       * <code>optional string dtype = 3;</code>
       */
      public java.lang.String getDtype() {
        java.lang.Object ref = dtype_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dtype_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string dtype = 3;</code>
       */
      public com.google.protobuf.ByteString getDtypeBytes() {
        java.lang.Object ref = dtype_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          dtype_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string dtype = 3;</code>
       */
      public Builder setDtype(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        dtype_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string dtype = 3;</code>
       */
      public Builder clearDtype() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dtype_ = getDefaultInstance().getDtype();
        onChanged();
        return this;
      }

      /**
       * <code>optional string dtype = 3;</code>
       */
      public Builder setDtypeBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        dtype_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object logger_ = "";

      /**
       * <code>optional string logger = 4;</code>
       */
      public boolean hasLogger() {
        return ((bitField0_ & 0x00000008) != 0);
      }

      /**
       * <code>optional string logger = 4;</code>
       */
      public java.lang.String getLogger() {
        java.lang.Object ref = logger_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            logger_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string logger = 4;</code>
       */
      public com.google.protobuf.ByteString getLoggerBytes() {
        java.lang.Object ref = logger_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          logger_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string logger = 4;</code>
       */
      public Builder setLogger(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        logger_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string logger = 4;</code>
       */
      public Builder clearLogger() {
        bitField0_ = (bitField0_ & ~0x00000008);
        logger_ = getDefaultInstance().getLogger();
        onChanged();
        return this;
      }

      /**
       * <code>optional string logger = 4;</code>
       */
      public Builder setLoggerBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        logger_ = value;
        onChanged();
        return this;
      }

      private int severity_ = 7;

      /**
       * <code>optional int32 severity = 5 [default = 7];</code>
       */
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000010) != 0);
      }

      /**
       * <code>optional int32 severity = 5 [default = 7];</code>
       */
      public int getSeverity() {
        return severity_;
      }

      /**
       * <code>optional int32 severity = 5 [default = 7];</code>
       */
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000010;
        severity_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 severity = 5 [default = 7];</code>
       */
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        severity_ = 7;
        onChanged();
        return this;
      }

      private java.lang.Object payload_ = "";

      /**
       * <code>optional string payload = 6;</code>
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000020) != 0);
      }

      /**
       * <code>optional string payload = 6;</code>
       */
      public java.lang.String getPayload() {
        java.lang.Object ref = payload_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            payload_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string payload = 6;</code>
       */
      public com.google.protobuf.ByteString getPayloadBytes() {
        java.lang.Object ref = payload_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          payload_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string payload = 6;</code>
       */
      public Builder setPayload(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        payload_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string payload = 6;</code>
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000020);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      /**
       * <code>optional string payload = 6;</code>
       */
      public Builder setPayloadBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        payload_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object envVersion_ = "";

      /**
       * <code>optional string env_version = 7;</code>
       */
      public boolean hasEnvVersion() {
        return ((bitField0_ & 0x00000040) != 0);
      }

      /**
       * <code>optional string env_version = 7;</code>
       */
      public java.lang.String getEnvVersion() {
        java.lang.Object ref = envVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            envVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string env_version = 7;</code>
       */
      public com.google.protobuf.ByteString getEnvVersionBytes() {
        java.lang.Object ref = envVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          envVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string env_version = 7;</code>
       */
      public Builder setEnvVersion(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        envVersion_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string env_version = 7;</code>
       */
      public Builder clearEnvVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        envVersion_ = getDefaultInstance().getEnvVersion();
        onChanged();
        return this;
      }

      /**
       * <code>optional string env_version = 7;</code>
       */
      public Builder setEnvVersionBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        envVersion_ = value;
        onChanged();
        return this;
      }

      private int pid_;

      /**
       * <code>optional int32 pid = 8;</code>
       */
      public boolean hasPid() {
        return ((bitField0_ & 0x00000080) != 0);
      }

      /**
       * <code>optional int32 pid = 8;</code>
       */
      public int getPid() {
        return pid_;
      }

      /**
       * <code>optional int32 pid = 8;</code>
       */
      public Builder setPid(int value) {
        bitField0_ |= 0x00000080;
        pid_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 pid = 8;</code>
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pid_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object hostname_ = "";

      /**
       * <code>optional string hostname = 9;</code>
       */
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000100) != 0);
      }

      /**
       * <code>optional string hostname = 9;</code>
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hostname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string hostname = 9;</code>
       */
      public com.google.protobuf.ByteString getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString
              .copyFromUtf8((java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string hostname = 9;</code>
       */
      public Builder setHostname(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        hostname_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string hostname = 9;</code>
       */
      public Builder clearHostname() {
        bitField0_ = (bitField0_ & ~0x00000100);
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }

      /**
       * <code>optional string hostname = 9;</code>
       */
      public Builder setHostnameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        hostname_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.mozilla.telemetry.heka.Heka.Field> fields_ = java.util.Collections
          .emptyList();

      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          fields_ = new java.util.ArrayList<com.mozilla.telemetry.heka.Heka.Field>(fields_);
          bitField0_ |= 0x00000200;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<com.mozilla.telemetry.heka.Heka.Field, com.mozilla.telemetry.heka.Heka.Field.Builder, com.mozilla.telemetry.heka.Heka.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public java.util.List<com.mozilla.telemetry.heka.Heka.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public com.mozilla.telemetry.heka.Heka.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder setFields(int index, com.mozilla.telemetry.heka.Heka.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder setFields(int index,
          com.mozilla.telemetry.heka.Heka.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder addFields(com.mozilla.telemetry.heka.Heka.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder addFields(int index, com.mozilla.telemetry.heka.Heka.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder addFields(com.mozilla.telemetry.heka.Heka.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder addFields(int index,
          com.mozilla.telemetry.heka.Heka.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends com.mozilla.telemetry.heka.Heka.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public com.mozilla.telemetry.heka.Heka.Field.Builder getFieldsBuilder(int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public com.mozilla.telemetry.heka.Heka.FieldOrBuilder getFieldsOrBuilder(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public java.util.List<? extends com.mozilla.telemetry.heka.Heka.FieldOrBuilder> getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public com.mozilla.telemetry.heka.Heka.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder()
            .addBuilder(com.mozilla.telemetry.heka.Heka.Field.getDefaultInstance());
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public com.mozilla.telemetry.heka.Heka.Field.Builder addFieldsBuilder(int index) {
        return getFieldsFieldBuilder().addBuilder(index,
            com.mozilla.telemetry.heka.Heka.Field.getDefaultInstance());
      }

      /**
       * <code>repeated .com.mozilla.telemetry.heka.Field fields = 10;</code>
       */
      public java.util.List<com.mozilla.telemetry.heka.Heka.Field.Builder> getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<com.mozilla.telemetry.heka.Heka.Field, com.mozilla.telemetry.heka.Heka.Field.Builder, com.mozilla.telemetry.heka.Heka.FieldOrBuilder> getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<com.mozilla.telemetry.heka.Heka.Field, com.mozilla.telemetry.heka.Heka.Field.Builder, com.mozilla.telemetry.heka.Heka.FieldOrBuilder>(
              fields_, ((bitField0_ & 0x00000200) != 0), getParentForChildren(), isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:com.mozilla.telemetry.heka.Message)
    }

    // @@protoc_insertion_point(class_scope:com.mozilla.telemetry.heka.Message)
    private static final com.mozilla.telemetry.heka.Heka.Message DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mozilla.telemetry.heka.Heka.Message();
    }

    public static com.mozilla.telemetry.heka.Heka.Message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated
    public static final com.google.protobuf.Parser<Message> PARSER = new com.google.protobuf.AbstractParser<Message>() {

      @java.lang.Override
      public Message parsePartialFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Message(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Message> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mozilla.telemetry.heka.Heka.Message getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor internal_static_com_mozilla_telemetry_heka_Header_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_com_mozilla_telemetry_heka_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_com_mozilla_telemetry_heka_Field_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_com_mozilla_telemetry_heka_Field_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_com_mozilla_telemetry_heka_Message_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_com_mozilla_telemetry_heka_Message_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
  static {
    java.lang.String[] descriptorData = { "\n\nheka.proto\022\032com.mozilla.telemetry.heka"
        + "\"\332\001\n\006Header\022\026\n\016message_length\030\001 \002(\r\022T\n\022h"
        + "mac_hash_function\030\003 \001(\01623.com.mozilla.te"
        + "lemetry.heka.Header.HmacHashFunction:\003MD"
        + "5\022\023\n\013hmac_signer\030\004 \001(\t\022\030\n\020hmac_key_versi"
        + "on\030\005 \001(\r\022\014\n\004hmac\030\006 \001(\014\"%\n\020HmacHashFuncti"
        + "on\022\007\n\003MD5\020\000\022\010\n\004SHA1\020\001\"\265\002\n\005Field\022\014\n\004name\030"
        + "\001 \002(\t\022G\n\nvalue_type\030\002 \001(\0162+.com.mozilla."
        + "telemetry.heka.Field.ValueType:\006STRING\022\026"
        + "\n\016representation\030\003 \001(\t\022\024\n\014value_string\030\004"
        + " \003(\t\022\023\n\013value_bytes\030\005 \003(\014\022\031\n\rvalue_integ"
        + "er\030\006 \003(\003B\002\020\001\022\030\n\014value_double\030\007 \003(\001B\002\020\001\022\026"
        + "\n\nvalue_bool\030\010 \003(\010B\002\020\001\"E\n\tValueType\022\n\n\006S"
        + "TRING\020\000\022\t\n\005BYTES\020\001\022\013\n\007INTEGER\020\002\022\n\n\006DOUBL"
        + "E\020\003\022\010\n\004BOOL\020\004\"\326\001\n\007Message\022\014\n\004uuid\030\001 \002(\014\022"
        + "\021\n\ttimestamp\030\002 \002(\003\022\r\n\005dtype\030\003 \001(\t\022\016\n\006log"
        + "ger\030\004 \001(\t\022\023\n\010severity\030\005 \001(\005:\0017\022\017\n\007payloa"
        + "d\030\006 \001(\t\022\023\n\013env_version\030\007 \001(\t\022\013\n\003pid\030\010 \001("
        + "\005\022\020\n\010hostname\030\t \001(\t\0221\n\006fields\030\n \003(\0132!.co"
        + "m.mozilla.telemetry.heka.Field" };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
        descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] {});
    internal_static_com_mozilla_telemetry_heka_Header_descriptor = getDescriptor().getMessageTypes()
        .get(0);
    internal_static_com_mozilla_telemetry_heka_Header_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mozilla_telemetry_heka_Header_descriptor, new java.lang.String[] {
            "MessageLength", "HmacHashFunction", "HmacSigner", "HmacKeyVersion", "Hmac", });
    internal_static_com_mozilla_telemetry_heka_Field_descriptor = getDescriptor().getMessageTypes()
        .get(1);
    internal_static_com_mozilla_telemetry_heka_Field_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mozilla_telemetry_heka_Field_descriptor,
        new java.lang.String[] { "Name", "ValueType", "Representation", "ValueString", "ValueBytes",
            "ValueInteger", "ValueDouble", "ValueBool", });
    internal_static_com_mozilla_telemetry_heka_Message_descriptor = getDescriptor()
        .getMessageTypes().get(2);
    internal_static_com_mozilla_telemetry_heka_Message_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mozilla_telemetry_heka_Message_descriptor,
        new java.lang.String[] { "Uuid", "Timestamp", "Dtype", "Logger", "Severity", "Payload",
            "EnvVersion", "Pid", "Hostname", "Fields", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
