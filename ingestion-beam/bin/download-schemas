#!/bin/bash

# Pulls down an archive of mozilla-pipeline-schemas and inserts test schemas for
# use in test suites.

set -e

function init_working_directory() {
    # Create a temporary directory for working. The current directory is stored
    # into $rootdir and the working directory is stored into $workdir. The
    # working directory will be removed on exit.
    rootdir=$(pwd)
    workdir=$(mktemp -d -t tmp.XXXXXXXXXX)
    function cleanup {
        rm -rf "$workdir"
        echo "Running cleanup!"
    }
    trap cleanup EXIT
    cd "$workdir" || exit
}

function insert_testing_schemas() {
    # Patch the current schema archive with testing resources. This function
    # should be called within the root directory of the extracted archive.
    # See: https://github.com/jklukas/mozilla-pipeline-schemas/commit/9f8d4252a170ce9241a153b3b49eef235e1279a2.patch
    mkdir -p schemas/test/test
    cat > schemas/test/test/test.1.schema.json << 'EOF'
{
  "$schema" : "http://json-schema.org/draft-04/schema#",
  "type" : "object",
  "title" : "default_schema",
  "properties" : {
  },
  "required" : []
}
EOF
    mkdir -p schemas/my-namespace/my-test
    cat > schemas/my-namespace/my-test/my-test.1.bq << 'EOF'
[
  {
    "mode": "NULLABLE",
    "name": "client_id",
    "type": "STRING"
  },
  {
    "mode": "NULLABLE",
    "name": "type",
    "type": "STRING"
  },
  {
    "mode": "NULLABLE",
    "name": "submission_timestamp",
    "type": "TIMESTAMP"
  }
]
EOF
}

cd "$(dirname "$0")/.."
init_working_directory

# Fetch schemas
BRANCH="generated-schemas"
TARFILE="$BRANCH.tar.gz"
curl -sL https://github.com/mozilla-services/mozilla-pipeline-schemas/archive/$TARFILE > schemas.tar.gz

# Extract and rename the top-level folder
mps="mozilla-pipeline-schemas"
tar -xf schemas.tar.gz
mv $mps-$BRANCH $mps

# Insert the testing resources
pushd "$(pwd)" > /dev/null
cd $mps
insert_testing_schemas
popd > /dev/null

# Save the schemas to the root directory relative to the script
tar -zcf "$rootdir/schemas.tar.gz" $mps
