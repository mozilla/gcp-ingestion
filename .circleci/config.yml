version: 2
jobs:
  spelling:
    docker:
    - image: mozilla/markdown-spellcheck
    steps:
    - checkout
    - run:
        name: Spell Check
        command: mdspell --ignore-numbers --en-us --report '**/*.md'

  prettier:
    docker:
    - image: node:alpine
    steps:
    - checkout
    - run:
        name: Install prettier
        command: npm install prettier
    - run:
        name: Check markdown is formatted with prettier
        command: npx prettier -c '**/*.md'

  docs:
    docker:
    - image: circleci/python:3.8
    steps:
    - checkout
    - run:
        name: Install dependencies
        command: sudo pip install mkdocs markdown-include
    - add_ssh_keys:
        fingerprints:
          "84:b0:66:dd:ec:68:b1:45:9d:5d:66:fd:4a:4f:1b:57"
    - run:
        name: Build and deploy docs
        command: |
          mkdocs gh-deploy -m "[ci skip] Deployed {sha} with MkDocs version: {version}"

  ingestion-edge: &edge
    working_directory: /root/project/ingestion-edge
    docker:
    - image: python:3.8
    steps:
    - &checkout
      checkout:
        path: /root/project
    - &skip_unmodified
      run:
        name: Early return when dir not modified
        command: |
          if [ "$CIRCLE_BRANCH" = master ]; then
              echo "Run tests because branch is master"
          elif git log --format=%B --no-merges -n 1 | grep -qF '[run-tests]'; then
              echo "Run tests because [run-tests] in commit message"
          elif ! git diff --quiet origin/master -- "$(git rev-parse --show-toplevel)"/.circleci; then
              echo "Run tests because .circleci/ was modified since branching off master"
          elif test -f pom.xml && ! git diff --quiet origin/master -- "$(git rev-parse --show-toplevel)"/pom.xml; then
              echo "Run tests because pom.xml was modified since branching off master"
          elif test -f pom.xml && ! git diff --quiet origin/master -- "$(git rev-parse --show-toplevel)"/ingestion-core/src; then
              echo "Run tests because ingestion-core/src was modified since branching off master"
          elif ! git diff --quiet origin/master... -- .; then
              echo "Run tests because $(git rev-parse --show-prefix) was modified since branching off master"
          else
              echo "Skipping tests because $(git rev-parse --show-prefix) was not modified"
              circleci step halt
          fi
    - restore_cache:
        keys:
          # when lock files change, use increasingly general patterns to restore cache
          - &cache_key_edge
            python-packages-v1-{{ .Branch }}-{{ checksum "requirements.in" }}-{{ checksum "requirements.txt" }}
          - python-packages-v1-{{ .Branch }}-{{ checksum "requirements.in" }}-
          - python-packages-v1-{{ .Branch }}-
          - python-packages-v1-
    - run:
        name: Build
        command: bin/build
    - run:
        name: PyTest with linters
        command: bin/pytest-all
        environment:
          PYTEST_ADDOPTS: --cov-report=xml
    - store_test_results:
        path: test-results
    - &report_code_coverage
      run:
        name: Report code coverage
        command: bash <(curl -s https://codecov.io/bash) -F "$(basename $PWD | sed s/[^a-z]/_/g)"
    - save_cache:
        paths:
        - ingestion-edge/venv/
        key: *cache_key_edge

  ingestion-edge-verify-requirements:
    <<: *edge
    steps:
      - *checkout
      - run:
          name: Verify that requirements.txt contains the right dependencies for this python version
          command: |
            pip install pip-tools
            pip-compile --quiet --generate-hashes
            git diff --exit-code requirements.txt

  ingestion-edge-release:
    working_directory: /root/project/ingestion-edge
    docker:
    - image: docker/compose:1.22.0
    steps:
    - *checkout
    - &setup_remote_docker
      setup_remote_docker:
        docker_layer_caching: true
    - &create_version_json
      run:
        name: Create version.json
        command: >-
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
          "$CIRCLE_SHA1"
          "${CIRCLE_TAG-latest}"
          "$CIRCLE_PROJECT_USERNAME"
          "$CIRCLE_PROJECT_REPONAME"
          "$CIRCLE_BUILD_URL"
          > version.json
    - &persist_ci_env
      run:
        name: Persist CI environment file for passing into docker containers
        command: env | grep '^CI' > circleci.env
    - run: &docker_compose_test
        name: Docker Compose Test
        command: >-
          docker-compose
          up
          --build
          --abort-on-container-exit
          --force-recreate
          --quiet-pull
        environment: &edge_compose_env
          COMPOSE_FILE: docker-compose.yml:docker-compose.circleci.yml
          COMPOSE_PROJECT_NAME: circleci-ingestion-edge
    - run:
        name: Deploy to Dockerhub
        command: |
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker-compose push web
        environment: *edge_compose_env

  ingestion-beam: &ingestion_beam
    working_directory: /root/project/ingestion-beam
    docker:
    # Pin the maven image due to observed VM aborts on CircleCI 2018-01-08.
    - image: maven@sha256:955e28c9a64b439591adfd43da77586c8bcd45f51627bf9144e297386c6a6be3
    steps:
    - *checkout
    - *skip_unmodified
    - &restore_cache_beam
      restore_cache:
        keys:
          # when lock file changes, use increasingly general patterns to restore cache
          # https://circleci.com/docs/2.0/caching/#maven-java-and-leiningen-clojure
          - &cache_key_beam
            maven-repo-v1-beam-{{ .Branch }}-{{ checksum "../pom.xml" }}-{{ checksum "../ingestion-core/pom.xml" }}-{{ checksum "pom.xml" }}
          - maven-repo-v1-beam-{{ .Branch }}-{{ checksum "../pom.xml" }}-{{ checksum "../ingestion-core/pom.xml" }}-
          - maven-repo-v1-beam-{{ .Branch }}-{{ checksum "../pom.xml" }}-
          - maven-repo-v1-beam-{{ .Branch }}-
          - maven-repo-v1-beam-
          - maven-repo-v1-
    - &download_beam_resources
      run:
        name: Download resources needed for Beam tests
        command: |
          bin/download-schemas
    - &maven_test
      run:
        name: Maven Test
        command: |
          mvn clean test
    - &store_maven_test_results
      store_test_results:
        path: target/surefire-reports
    - *report_code_coverage
    - save_cache:
        paths:
          - ~/.m2
        key: *cache_key_beam

  ingestion-beam-integration:
    <<: *ingestion_beam
    steps:
    # Checkout would fail if it were not the first step
    # because checkout path would contain working dir
    - *checkout
    - &skip_forked_pr
      run:
        name: Early return if this build is from a forked PR
        command: |
          if [ -n "$CIRCLE_PR_NUMBER" ]; then
            echo "Cannot pass creds to forked PRs, so marking this step successful"
            circleci step halt
          fi
    - *skip_unmodified
    - *restore_cache_beam
    - *download_beam_resources
    - &maven_integration_test
      run:
        name: Maven Integration Test
        # Google's client libraries will check for GOOGLE_APPLICATION_CREDENTIALS
        # and use a file in that location for credentials if present;
        # See https://cloud.google.com/docs/authentication/production
        command: |
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp.json"
          echo "$GCLOUD_SERVICE_KEY" > "$GOOGLE_APPLICATION_CREDENTIALS"
          mvn clean test -Dtest=*IntegrationTest -DfailIfNoTests=false
    - *store_maven_test_results
    - *report_code_coverage
    # We don't save_cache here; we let the ingestion-beam job cover that.

  ingestion-sink: &ingestion_sink
    <<: *ingestion_beam
    working_directory: /root/project/ingestion-sink
    steps:
    - *checkout
    - *skip_unmodified
    - &sink_restore_cache
      restore_cache:
        keys:
          # when lock file changes, use increasingly general patterns to restore cache
          # https://circleci.com/docs/2.0/caching/#maven-java-and-leiningen-clojure
          - &cache_key_sink
            maven-repo-v1-sink-{{ .Branch }}-{{ checksum "../pom.xml" }}-{{ checksum "../ingestion-core/pom.xml" }}-{{ checksum "pom.xml" }}
          - maven-repo-v1-sink-{{ .Branch }}-{{ checksum "../pom.xml" }}-{{ checksum "../ingestion-core/pom.xml" }}-
          - maven-repo-v1-sink-{{ .Branch }}-{{ checksum "../pom.xml" }}-
          - maven-repo-v1-sink-{{ .Branch }}-
          - maven-repo-v1-sink-
          - maven-repo-v1-
    - *maven_test
    - *store_maven_test_results
    - *report_code_coverage
    - save_cache:
        paths:
          - ~/.m2
        key: *cache_key_sink

  ingestion-sink-integration:
    <<: *ingestion_sink
    steps:
    - *checkout
    - *skip_forked_pr
    - *skip_unmodified
    - *sink_restore_cache
    - *maven_integration_test
    - *store_maven_test_results
    - *report_code_coverage

  ingestion-sink-release:
    <<: *ingestion_sink
    docker:
      - image: docker/compose:1.22.0
    steps:
      - *setup_remote_docker
      - *checkout
      - *create_version_json
      - *persist_ci_env
      - run:
          <<: *docker_compose_test
          environment: &sink_compose_env
            <<: *edge_compose_env
            COMPOSE_PROJECT_NAME: circleci-ingestion-sink
      - run:
          name: Deploy to Dockerhub
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker-compose push sink
          environment: *sink_compose_env

workflows:
  version: 2
  build:
    jobs:
    - spelling
    - prettier
    - docs:
        filters:
          branches:
            only: master
    - ingestion-edge
    - ingestion-edge-verify-requirements
    - ingestion-edge-release:
        filters:
          branches:
            only: master
          tags:
            only: /.*/
    - ingestion-beam
    - ingestion-beam-integration
    - ingestion-sink
    - ingestion-sink-integration
    - ingestion-sink-release:
        filters:
          branches:
            only: master
          tags:
            only: /.*/
