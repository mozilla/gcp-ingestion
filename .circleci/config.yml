version: 2
jobs:
  spelling:
    docker:
    - image: mozilla/markdown-spellcheck
    steps:
    - checkout
    - run:
        name: Spell Check
        command: mdspell --ignore-numbers --en-us --report '**/*.md'

  doctoc:
    docker:
    - image: node:8.10.0
    steps:
      - checkout
      - run:
          name: Ensure markdown tables of contents are up to date
          command: ./.circleci/doctoc-check.sh

  format-python:
    docker:
    - image: python
    steps:
      - checkout
      - run:
          name: Install black
          command: pip install black
      - run:
          name: Ensure ingestion-edge is formatted by black
          command: black --check --diff ingestion-edge

  ingestion-edge:
    docker:
    - image: docker/compose:1.22.0
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Create version.json
        command: >-
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
          "$CIRCLE_SHA1"
          "${CIRCLE_TAG-latest}"
          "$CIRCLE_PROJECT_USERNAME"
          "$CIRCLE_PROJECT_REPONAME"
          "$CIRCLE_BUILD_URL"
          > ingestion-edge/version.json
    - run:
        name: Docker Compose Test
        command: >-
          docker-compose
          up
          --build
          --exit-code-from test
          --force-recreate
          --quiet-pull
        environment:
          COMPOSE_FILE: ingestion-edge/docker-compose.yml
          COMPOSE_PROJECT_NAME: circleci-ingestion-edge
    - run:
        name: Early return for no deploy
        command: |
          if [ -n "$CIRCLE_PR_NUMBER" ] || ([ "${CIRCLE_BRANCH}" != "master" ] && [ -z "${CIRCLE_TAG}" ]); then
            echo "Nothing to deploy"
            circleci step halt
          fi
    - run:
        name: Deploy to Dockerhub
        command: |
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker-compose push web
        environment:
          COMPOSE_FILE: ingestion-edge/docker-compose.yml
          COMPOSE_PROJECT_NAME: circleci-ingestion-edge

  ingestion-beam:
    docker:
    - image: maven
    steps:
    - checkout
    - restore_cache:
        keys:
          # when lock file changes, use increasingly general patterns to restore cache
          # https://circleci.com/docs/2.0/caching/#maven-java-and-leiningen-clojure
          - maven-repo-v1-{{ .Branch }}-{{ checksum "ingestion-beam/pom.xml" }}
          - maven-repo-v1-{{ .Branch }}-
          - maven-repo-v1-
    - run:
        name: Download Geolite2
        command: ingestion-beam/bin/download-geolite2
    - run:
        name: Maven Test
        command: cd ingestion-beam && mvn clean test
    - run:
        name: Report code coverage
        command: bash <(curl -s https://codecov.io/bash) -F ingestion-beam
    - save_cache:
        paths:
          - ~/.m2
        key: maven-repo-v1-{{ .Branch }}-{{ checksum "ingestion-beam/pom.xml" }}

workflows:
  version: 2
  build:
    jobs:
    - spelling
    - doctoc
    - format-python
    - ingestion-edge
    - ingestion-beam
